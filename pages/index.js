import { useEffect, useState, useCallback, createRef } from 'react'
import Head from 'next/head'
import Image from 'next/image'
import { useRouter } from 'next/router'
import styles from '../styles/Home.module.css'

export default function Home() {
  const router = useRouter();
  const [iframeSrc, setIframeSrc] = useState(router?.query?.src || "");

  const clickHandler = useCallback((e) => {
    router.push(`/?src=${iframeSrc}`);
  }, [iframeSrc, router])

  const changeHandler = useCallback((e) => {
    setIframeSrc(e.target.value)
  }, [])

  return (
    <div className={styles.container}>
      <Head>
        <title>Let&apos;s frame it!</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={router.query.src ? styles.mainFramed : styles.main}>
        <div className={router.query.src ? styles.headerFramed : styles.header}>
          <h1 className={router.query.src ? styles.titleFramed : styles.title}>
            Input iframe src
          </h1>

          <p className={router.query.src ? styles.descriptionFramed : styles.description}>
            <input type="text" name="iframeSrc" onChange={changeHandler} value={iframeSrc} />
            <button name="iframeSrcRun" onClick={clickHandler}>LOAD</button>
          </p>
        </div>
        {router.query.src && (
          <iframe
            className={styles.framed}
            src={router.query.src}
            allow={router.query.allow}
            creferrerpolicy={router.query.referrerpolicy}
            sandbox={router.query.sandbox}
            ></iframe>
        )}
      </main>

      {!router.query.src && (
        <footer className={styles.footer}>
          <a
            href="https://vercel.com?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app"
            target="_blank"
            rel="noopener noreferrer"
          >
            Powered by{' '}
            <span className={styles.logo}>
              <Image src="/vercel.svg" alt="Vercel Logo" width={72} height={16} />
            </span>
          </a>
        </footer>
      )}
    </div>
  )
}

// This function gets called at build time
export async function getServerSideProps() {
  // Call an external API endpoint to get posts
  // const res = await fetch('https://.../posts')
  // const posts = await res.json()

  // By returning { props: { posts } }, the Blog component
  // will receive `posts` as a prop at build time
  return {
    props: {
      
    },
  }
}
